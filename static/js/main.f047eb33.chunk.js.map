{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f047eb33.chunk.js","sourcesContent":["\nconst Button = ({color, text, onClick}) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{backgroundColor: color}}\n      className='btn'>{text}</button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelBlue'\n}\n\n\nexport default Button;\n","import Button from \"./Button\";\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      <Button\n        color={showAdd ? 'red' : 'green'}\n        text={showAdd ? 'Close' : 'Add'}\n        onClick={onAdd}\n      />\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Task tracker'\n}\nexport default Header;\n","import  { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({task, onDelete, onToggle}) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n       <h3>\n        {task.text}\n        <FaTimes\n          style={{\n            color: 'red',\n            cursor: 'pointer',\n          }}\n        onClick={() => onDelete(task.id)}/>\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  )\n}\n\nexport default Task;\n","import Task from \"./Task\";\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete = {onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </>\n  )\n}\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({onAdd}) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState('')\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!text) {\n      alert('Please add a task');\n      return;\n    }\n\n    onAdd({ text, day, reminder });\n    setText('');\n    setDay('')\n    setReminder('')\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input type='text' placeholder='Add Task'\n               value={text}\n               onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label> Day & Time</label>\n        <input type='text' placeholder='Add Day & Time'\n               value={day}\n               onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className='form-control-check'>\n        <label>Set Reminder</label>\n        <input type='checkbox'\n               checked={reminder}\n               value={reminder}\n               onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type='submit' value='Save Task' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default AddTask;\n","import  { useState } from 'react';\n\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {id: 1, day: 'one', text: 111, reminder: true},\n    {id: 2, day: 'two', text: 222, reminder: true}]);\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  }\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task));\n  }\n\n  return (\n    <div className='container'>\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n\n      />\n      {showAddTask && <AddTask onAdd ={addTask} />}\n      {tasks.length > 0 ?\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n        : 'No tasks To Show'\n      }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}